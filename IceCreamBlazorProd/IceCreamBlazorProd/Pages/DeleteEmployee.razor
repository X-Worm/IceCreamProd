@page "/DeleteEmployee/{CurrentID}"
@using IceCreamBlazorProd.Data
@inject EmployeesService empService
@inject NavigationManager navManager

<h3>Delete Employee</h3>
<hr />
<h3>Are you sure want to delete it?</h3>
<div class="row">
    <div class="col-md-8">
        <div class="form-group">
            <label>Employee ID:</label>
            <label>@emp.EmployeeId</label>
        </div>
        <div class="form-group">
            <label>Name:</label>
            <label>@emp.Name</label>
        </div>
        <div class="form-group">
            <label>LastName:</label>
            <label>@emp.LastName</label>
        </div>
        <div class="form-group">
            <label>Age:</label>
            <label>@emp.Age</label>
        </div>
        <div class="form-group">
            <label>Position:</label>
            <label>@emp.Position</label>
        </div>
        <div class="form-group">
            <label>Salary:</label>
            <label>@emp.Salary</label>
        </div>
        <div class="form-group">
            <label>BirthDate:</label>
            <label>@emp.BirthDate.ToShortDateString()</label>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-danger" @onclick="@DeleteSomeEmployee" value="Delete" />
            <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string CurrentID { get; set; }
    IceCreamBlazorProd.Data.Employee emp = new IceCreamBlazorProd.Data.Employee();

    protected override async Task OnInitializedAsync()
    {
        emp = await Task.Run(() => empService.GetById(Convert.ToInt32(CurrentID)));
    }

    protected void DeleteSomeEmployee()
    {
        empService.Delete(emp);
        navManager.NavigateTo("employees");
    }

    void Cancel()
    {
        navManager.NavigateTo("employees");
    }

}
